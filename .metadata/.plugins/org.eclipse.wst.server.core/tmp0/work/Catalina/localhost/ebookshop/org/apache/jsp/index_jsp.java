/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.27
 * Generated at: 2023-02-11 08:10:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.Vector;
import ebookshop.Book;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Vector");
    _jspx_imports_classes.add("ebookshop.Book");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("/**************************\r\n");
      out.write("	James Bailey CSD 430  *\r\n");
      out.write("	 Module5 Assignment   *\r\n");
      out.write("***************************/\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("  <title>E-bookshop</title>\r\n");
      out.write("  <style type=\"text/css\">\r\n");
      out.write("    body {background-color:gray; font-size=10pt;}\r\n");
      out.write("    H1 {font-size:20pt;}\r\n");
      out.write("    table {background-color:white;}\r\n");
      out.write("    </style>\r\n");
      out.write("  </head>\r\n");
      out.write("<body>\r\n");
      out.write("  <H1>Your online Bookshop</H1>\r\n");
      out.write("  <hr/><p/>\r\n");
  // Scriptlet 1: check whether the book list is ready
  Vector booklist =
      (Vector<ebookshop.Book>)session.getAttribute("ebookshop.list");
  if (booklist == null) {
    response.sendRedirect("/ebookshop/eshop");
    }
  else {
  
      out.write("<form name=\"addForm\" action=\"eshop\" method=\"POST\">\r\n");
      out.write("      <input type=\"hidden\" name=\"do_this\" value=\"add\">\r\n");
      out.write("      Book:\r\n");
      out.write("      <select name=book>\r\n");
  // Scriptlet 2: copy the book list to the selection control
        for (int i = 0; i < booklist.size(); i++) {
          out.println("<option>" + (String)booklist.elementAt(i) + "</option>");
          }
  
      out.write("</select>\r\n");
      out.write("      Quantity: <input type=\"text\" name=\"qty\" size=\"3\" value=\"1\">\r\n");
      out.write("      <input type=\"submit\" value=\"Add to Cart\">\r\n");
      out.write("      </form>\r\n");
      out.write("    <p/>\r\n");
  // Scriptlet 3: check whether the shopping cart is empty
    Vector<ebookshop.Book> shoplist =
        (Vector<ebookshop.Book>)session.getAttribute("ebookshop.cart");
    if (shoplist != null  &&  shoplist.size() > 0) {
  
      out.write("<table border=\"1\" cellpadding=\"2\">\r\n");
      out.write("      <tr>\r\n");
      out.write("      <td>TITLE</td>\r\n");
      out.write("      <td>PRICE</td>\r\n");
      out.write("      <td>QUANTITY</td>\r\n");
      out.write("      <td></td>\r\n");
      out.write("      </tr>\r\n");
  // Scriptlet 4: display the books in the shopping cart
      for (int i = 0; i < shoplist.size(); i++) {
        Book aBook = shoplist.elementAt(i);
  
      out.write("<tr>\r\n");
      out.write("          <form name=\"removeForm\" action=\"eshop\" method=\"POST\">\r\n");
      out.write("            <input type=\"hidden\" name=\"position\" value=\"");
      out.print(i);
      out.write("\">\r\n");
      out.write("            <input type=\"hidden\" name=\"do_this\" value=\"remove\">\r\n");
      out.write("            <td>");
      out.print(aBook.getTitle());
      out.write("</td>\r\n");
      out.write("            <td align=\"right\">$");
      out.print(aBook.getPrice());
      out.write("</td>\r\n");
      out.write("            <td align=\"right\">");
      out.print(aBook.getQuantity());
      out.write("</td>\r\n");
      out.write("            <td><input type=\"submit\" value=\"Remove from Cart\"></td>\r\n");
      out.write("            </form>\r\n");
      out.write("          </tr>\r\n");

        } // for (int i..
  
      out.write("</table>\r\n");
      out.write("      <p/>\r\n");
      out.write("      <form name=\"checkoutForm\" action=\"eshop\" method=\"POST\">\r\n");
      out.write("        <input type=\"hidden\" name=\"do_this\" value=\"checkout\">\r\n");
      out.write("        <input type=\"submit\" value=\"Checkout\">\r\n");
      out.write("        </form>\r\n");

      } // if (shoplist..
    } // if (booklist..else..
  
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
